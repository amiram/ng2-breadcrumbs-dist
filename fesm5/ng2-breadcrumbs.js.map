{"version":3,"file":"ng2-breadcrumbs.js.map","sources":["ng://ng2-breadcrumbs/breadcrumbs.service.ts","ng://ng2-breadcrumbs/breadcrumbs.component.ts","ng://ng2-breadcrumbs/breadcrumbs.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {IBreadcrumb} from \"./breadcrumbs.model\";\nimport {Observable, Observer, Subject} from \"rxjs\";\n\n@Injectable()\nexport class BreadcrumbsService {\n\n    private breadcrumbs:IBreadcrumb[];\n    private prefixedBreadcrumbs:IBreadcrumb[] = [];\n    public breadcrumbsSource:Subject<IBreadcrumb[]>;\n    public breadcrumbsChanged$:Observable<IBreadcrumb[]>;\n\n    constructor() {\n        this.breadcrumbs = [];\n        this.breadcrumbsSource = new Subject<IBreadcrumb[]>();\n        this.breadcrumbsChanged$ = this.breadcrumbsSource.asObservable();\n\n        if(localStorage.getItem('prefixedBreadcrumbs') != null) {\n            this.prefixedBreadcrumbs = (JSON.parse(localStorage.getItem('prefixedBreadcrumbs')))\n        }\n    }\n\n    //Store the breadcrumbs of the current route\n    public store(breadcrumbs:IBreadcrumb[]) {\n        this.breadcrumbs = breadcrumbs;\n\n        let allBreadcrumbs = this.prefixedBreadcrumbs.concat(this.breadcrumbs);\n        this.breadcrumbsSource.next(allBreadcrumbs);\n\n    }\n\n\n    // Add a prefixed breadcrumb\n    public storePrefixed(breadcrumb:IBreadcrumb) {\n        this.storeIfUnique(breadcrumb);\n        localStorage.setItem('prefixedBreadcrumbs', JSON.stringify(this.prefixedBreadcrumbs));\n        let allBreadcrumbs = this.prefixedBreadcrumbs.concat(this.breadcrumbs);\n        this.breadcrumbsSource.next(allBreadcrumbs);\n\n    }\n\n\n    //Return the breadcrumbs\n    public get() {\n        return this.breadcrumbsChanged$\n    }\n\n\n\n    // storeIfUnique checks if there are any duplicate prefixed breadcrumbs\n    private storeIfUnique(newBreadcrumb:IBreadcrumb) {\n        let isUnique = true;\n        for(let crumb of this.prefixedBreadcrumbs) {\n            if (newBreadcrumb.url == crumb.url) {\n                isUnique = false;\n                break;\n            }\n        }\n        if(isUnique) {\n            this.prefixedBreadcrumbs.push(newBreadcrumb);\n        }\n\n    }\n\n}","import {Component, Input, OnInit, ViewEncapsulation} from \"@angular/core\";\nimport {Router, ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET} from \"@angular/router\";\nimport {IBreadcrumb} from \"./breadcrumbs.model\";\nimport {BreadcrumbsService} from \"./breadcrumbs.service\";\nimport {filter} from 'rxjs/operators';\n\n\n@Component({\n    selector: \"breadcrumb\",\n    template: `\n        <div [ngClass]=\"{ 'container-fluid': allowBootstrap, 'fluid-bread': true}\">\n            <div class=\"container\">\n                <ol [ngClass]=\"{ 'breadcrumb': allowBootstrap}\" class=\"{{addClass ? '' + addClass : ''}}\">\n                    <li *ngFor=\"let breadcrumb of breadcrumbs; let last = last\"\n                        [ngClass]=\"{ 'breadcrumb-item': allowBootstrap, 'list': true, 'active': last }\">\n                        <a *ngIf=\"!last\" [routerLink]=\"hasParams(breadcrumb)\">\n                            {{breadcrumb.label}}\n                        </a>\n                        <span *ngIf=\"last\">{{ breadcrumb.label }}</span>\n                    </li>\n                </ol>\n            </div>\n        </div>`,\n    styles: [`\n        .fluid-bread {\n            background-color: white;\n        }\n\n        .breadcrumb {\n            background-color: white;\n            padding: 4px;\n            margin-bottom: 0;\n        }`],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class BreadcrumbComponent implements OnInit {\n\n    // The breadcrumbs of the current route\n    private currentBreadcrumbs: IBreadcrumb[];\n    // All the breadcrumbs\n    public breadcrumbs: IBreadcrumb[];\n\n    @Input()\n    public allowBootstrap: boolean;\n\n    @Input()\n    public addClass: string;\n\n\n    public constructor(private breadcrumbService: BreadcrumbsService, private activatedRoute: ActivatedRoute, private router: Router) {\n        breadcrumbService.get().subscribe((breadcrumbs: IBreadcrumb[]) => {\n            this.breadcrumbs = breadcrumbs as IBreadcrumb[];\n        });\n    }\n\n    public hasParams(breadcrumb: IBreadcrumb) {\n        return Object.keys(breadcrumb.params).length ? [breadcrumb.url, breadcrumb.params] : [breadcrumb.url];\n    }\n\n\n    public ngOnInit() {\n        const ROUTE_DATA_BREADCRUMB: string = \"breadcrumb\";\n        const ROUTE_PARAM_BREADCRUMB: string = \"breadcrumb\";\n        const PREFIX_BREADCRUMB: string = \"prefixBreadcrumb\";\n\n        // subscribe to the NavigationEnd event\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n            // reset currentBreadcrumbs\n            this.currentBreadcrumbs = [];\n\n\n            // get the root of the current route\n            let currentRoute: ActivatedRoute = this.activatedRoute.root;\n\n\n            // set the url to an empty string\n            let url: string = \"\";\n\n            // iterate from activated route to children\n            while (currentRoute.children.length > 0) {\n                let childrenRoutes: ActivatedRoute[] = currentRoute.children;\n                let breadCrumbLabel: string = \"\";\n\n                // iterate over each children\n                childrenRoutes.forEach(route => {\n                    // Set currentRoute to this route\n                    currentRoute = route;\n                    // Verify this is the primary route\n                    if (route.outlet !== PRIMARY_OUTLET) {\n                        return;\n                    }\n\n                    const hasData = (route.routeConfig && route.routeConfig.data);\n                    const hasDynamicBreadcrumb: boolean = route.snapshot.params.hasOwnProperty(ROUTE_PARAM_BREADCRUMB);\n\n                    if (hasData || hasDynamicBreadcrumb) {\n\n\n                        /*\n                         Verify the custom data property \"breadcrumb\"\n                         is specified on the route or in its parameters.\n\n                         Route parameters take precedence over route data\n                         attributes.\n                         */\n                        if (hasDynamicBreadcrumb) {\n                            breadCrumbLabel = route.snapshot.params[ROUTE_PARAM_BREADCRUMB].replace(/_/g, \" \");\n                        } else if (route.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\n                            breadCrumbLabel = route.snapshot.data[ROUTE_DATA_BREADCRUMB];\n                        }\n\n                        // Get the route's URL segment\n                        let routeURL: string = route.snapshot.url.map(segment => segment.path).join(\"/\");\n                        url += `/${routeURL}`;\n\n                        // Cannot have parameters on a root route\n                        if (routeURL.length === 0) {\n                            route.snapshot.params = {};\n                        }\n\n\n                        // Add breadcrumb\n                        let breadcrumb: IBreadcrumb = {\n                            label: breadCrumbLabel,\n                            params: route.snapshot.params,\n                            url: url\n                        };\n\n                        // Add the breadcrumb as 'prefixed'. It will appear before all breadcrumbs\n                        if (route.snapshot.data.hasOwnProperty(PREFIX_BREADCRUMB)) {\n                            this.breadcrumbService.storePrefixed(breadcrumb);\n                        }\n                        else {\n                            this.currentBreadcrumbs.push(breadcrumb);\n                        }\n\n                    }\n\n                });\n\n                this.breadcrumbService.store(this.currentBreadcrumbs);\n            }\n        });\n    }\n}","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {BreadcrumbComponent} from \"./breadcrumbs.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {BreadcrumbsService} from \"./breadcrumbs.service\";\n\n@NgModule({\n\n    declarations: [\n        BreadcrumbComponent\n    ],\n    providers: [\n        BreadcrumbsService\n    ],\n    imports: [\n        RouterModule,\n        BrowserModule,\n        CommonModule\n    ],\n    exports: [BreadcrumbComponent]\n})\nexport class BreadcrumbsModule {\n    constructor() {}\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: BreadcrumbsModule,\n        };\n    }\n}\n\n"],"names":["tslib_1.__values"],"mappings":"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"}
